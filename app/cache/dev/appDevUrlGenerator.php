<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_assetic_bootstrap_js' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_js',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/bootstrap_js.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_js_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_js',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/bootstrap_js_bootstrap_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_css' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_css',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/bootstrap_css.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_css_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_css',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/bootstrap_css_bootstrap_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_css_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_css',    'pos' => 1,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/bootstrap_css_bootstrap-theme_2.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_ttf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_ttf',    'pos' => NULL,    '_format' => 'ttf',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular.ttf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_ttf_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_ttf',    'pos' => 0,    '_format' => 'ttf',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular_glyphicons-halflings-regular_1.ttf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_eot' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_eot',    'pos' => NULL,    '_format' => 'eot',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular.eot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_eot_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_eot',    'pos' => 0,    '_format' => 'eot',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular_glyphicons-halflings-regular_1.eot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_svg' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_svg',    'pos' => NULL,    '_format' => 'svg',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular.svg',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_svg_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_svg',    'pos' => 0,    '_format' => 'svg',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular_glyphicons-halflings-regular_1.svg',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_woff' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_woff',    'pos' => NULL,    '_format' => 'woff',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular.woff',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_bootstrap_glyphicons_woff_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'bootstrap_glyphicons_woff',    'pos' => 0,    '_format' => 'woff',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fonts/glyphicons-halflings-regular_glyphicons-halflings-regular_1.woff',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_jquery' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'jquery',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/jquery.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_jquery_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'jquery',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/assetic/jquery_jquery_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_fddb9b6' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'fddb9b6',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/fddb9b6.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_fddb9b6_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'fddb9b6',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/fddb9b6_part_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_a56fa94' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a56fa94',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/a56fa94.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_a56fa94_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a56fa94',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/a56fa94_part_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_a56fa94_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a56fa94',    'pos' => 1,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/a56fa94_part_2.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\UserBundle\\Controller\\LoginController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\UserBundle\\Controller\\LoginController::loginCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\UserBundle\\Controller\\LoginController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\UserBundle\\Controller\\RegisterController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sistemadesocios/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/sistemadesocios',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sistemadesocios/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sistemadesocios/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/sistemadesocios',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/sistemadesocios',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sistemadesocios_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\SistemaDeSociosController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/sistemadesocios',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/periododeinscricao/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periododeinscricao',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/periododeinscricao/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/periododeinscricao/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periododeinscricao',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periododeinscricao',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periododeinscricao_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoDeInscricaoController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periododeinscricao',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/metododepagamento/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/metododepagamento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento_new' => array (  0 =>   array (    0 => 'evento_id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evento_id',    ),    1 =>     array (      0 => 'text',      1 => '/metododepagamento/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/metododepagamento/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/metododepagamento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/metododepagamento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'metododepagamento_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\MetodoDePagamentoController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/metododepagamento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/categoria/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/categoria',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_new' => array (  0 =>   array (    0 => 'evento_id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evento_id',    ),    1 =>     array (      0 => 'text',      1 => '/categoria/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_adicionarMaisCategorias' => array (  0 =>   array (    0 => 'evento_id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::adicionarMaisCategoriasAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evento_id',    ),    1 =>     array (      0 => 'text',      1 => '/categoria/adicionarMaisCategorias',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_PersisteEProximo' => array (  0 =>   array (    0 => 'evento_id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::PersisteEProximoAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evento_id',    ),    1 =>     array (      0 => 'text',      1 => '/categoria/PersisteEProximo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/categoria/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/categoria',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/categoria',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoria_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\CategoriaController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/categoria',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/acompanhantes/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/acompanhantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/acompanhantes/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/acompanhantes/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/acompanhantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/acompanhantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acompanhantes_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\AcompanhantesController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/acompanhantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/regra/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/regra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/regra/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/regra/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/regra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/regra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regra_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\RegraController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/regra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/periodo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periodo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/periodo/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/periodo/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periodo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periodo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'periodo_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\PeriodoController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/periodo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evento/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::newAction',  ),  2 =>   array (    '_method' => 'post|get',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evento/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evento/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evento_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventWeb\\EventFormBundle\\Controller\\EventoController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evento',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
